// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TaskTracker.Dal;

#nullable disable

namespace TaskTracker.Dal.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20240808113225_MigrateToPostgresql")]
    partial class MigrateToPostgresql
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("TaskTracker.Bll.Folder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseSerialColumn(b.Property<int>("Id"));

                    b.Property<string>("Title")
                        .HasMaxLength(100)
                        .HasColumnType("varchar");

                    b.HasKey("Id");

                    b.ToTable("Folders");
                });

            modelBuilder.Entity("TaskTracker.Bll.UserTask", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseSerialColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CompletionDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DeletionDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasMaxLength(100000)
                        .HasColumnType("varchar");

                    b.Property<DateTime?>("DueDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("FolderId")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .HasMaxLength(1000)
                        .HasColumnType("varchar");

                    b.HasKey("Id");

                    b.HasIndex("FolderId");

                    b.ToTable("Tasks");
                });

            modelBuilder.Entity("TaskTracker.Bll.UserTask", b =>
                {
                    b.HasOne("TaskTracker.Bll.Folder", null)
                        .WithMany("Tasks")
                        .HasForeignKey("FolderId");
                });

            modelBuilder.Entity("TaskTracker.Bll.Folder", b =>
                {
                    b.Navigation("Tasks");
                });
#pragma warning restore 612, 618
        }
    }
}
